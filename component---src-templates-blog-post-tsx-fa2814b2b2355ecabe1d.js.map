{"version":3,"sources":["webpack://data-controller-site/./src/templates/post/index.tsx","webpack://data-controller-site/./src/templates/blog-post.tsx"],"names":["StyledTitle","styled","props","Link","StyledDate","StyledContent","post","tagsJSX","location","frontmatter","tags","map","tag","index","key","to","kebabCase","rel","authorJSX","authorLink","href","target","author","G","image","previewImg","childImageSharp","gatsbyImageData","style","width","marginBottom","imgStyle","objectFit","alt","title","date","dangerouslySetInnerHTML","__html","html","data","pageContext","heroSection","description","images","fallback","src","color","bgColor","bottomArrow","className"],"mappings":"sQAiBMA,IAToBC,SAAO,SAACC,GAAD,OAAW,gBAAC,EAAAC,KAASD,MAA/B,mEAAGD,CAAH,wEASHA,mBAAH,yDAAGA,CAAH,4GAMXG,EAAaH,qBAAH,wDAAGA,CAAH,gIAoBVI,GAPaJ,kBAAH,wDAAGA,CAAH,uEAOMA,oBAAH,2DAAGA,CAAH,i3BAmHnB,EAxCa,SAAC,GAAwB,IAAD,EAArBK,EAAqB,EAArBA,KACRC,GAD6B,EAAfC,WACH,UAAAF,EAAKG,mBAAL,eAAkBC,OAAQ,IAAIC,KAAI,SAACC,EAAKC,GAAN,OACjD,wBAAMC,IAAKD,GACRA,EAAQ,GAAK,KACd,gBAAC,EAAAV,KAAD,CAAMY,GAAE,aAAeC,IAAUJ,GAAzB,IAAkCK,IAAI,gBAC3CL,QAIDM,EAAYZ,EAAKG,YAAYU,WACjC,4BACE,qBAAGC,KAAMd,EAAKG,YAAYU,WAAYE,OAAO,SAASJ,IAAI,YACvDX,EAAKG,YAAYa,SAItB,4BAAOhB,EAAKG,YAAYa,QAE1B,OACE,2BACE,gBAAC,EAAAC,EAAD,CACEC,MAAOlB,EAAKG,YAAYgB,WAAWC,gBAAgBC,gBACnDC,MAAO,CAAEC,MAAO,OAAQC,aAAc,QACtCC,SAAU,CAAEC,UAAW,WACvBC,IAAK3B,EAAKG,YAAYyB,QAGxB,gBAAClC,EAAD,KAAcM,EAAKG,YAAYyB,OAC/B,gBAAC9B,EAAD,KACGE,EAAKG,YAAY0B,KADpB,SACgC5B,EADhC,SAC+CW,GAE/C,gBAACb,EAAD,CACE+B,wBAAyB,CACvBC,OAAQ/B,EAAKgC,U,UClHvB,EA3ByB,SAAC,GAAqC,IAAD,YAAlCC,EAAkC,EAAlCA,KAAM/B,EAA4B,EAA5BA,SAAUgC,EAAkB,EAAlBA,YAClClC,EAASiC,EAATjC,KACAmB,EAAenB,EAAKG,YAApBgB,WAER,OACE,gBAAC,IAAD,CAAQjB,SAAUA,EAAUiC,aAAa,GACvC,gBAAC,IAAD,CACEP,MAAO5B,SAAF,UAAEA,EAAMG,mBAAR,aAAE,EAAmByB,MAC1BQ,YAAapC,SAAF,UAAEA,EAAMG,mBAAR,aAAE,EAAmBiC,YAChCjB,WACEA,SADQ,UACRA,EAAYC,uBADJ,iBACR,EAA6BC,uBADrB,iBACR,EAA8CgB,cADtC,iBACR,EAAsDC,gBAD9C,aACR,EAAgEC,MAGpE,gBAAC,KAAD,CAASC,MAAM,QAAQC,QAAQ,QAAQC,aAAa,GAClD,uBAAKC,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,EAAD,CAAM3C,KAAMA,EAAME,SAAUA,KAE9B,uBAAKyC,UAAU,YACb,gBAAC,IAAD,CAAST,YAAaA,EAAahC,SAAUA","file":"component---src-templates-blog-post-tsx-fa2814b2b2355ecabe1d.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\n\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport styled from 'styled-components'\n\nexport const StyledLink = styled((props) => <Link {...props} />)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    opacity: 0.8;\n    color: black;\n  }\n`\n\nconst StyledTitle = styled.h5`\n  font-family: 'Montserrat', 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial,\n    sans-serif;\n  margin-bottom: 0;\n`\n\nconst StyledDate = styled.span`\n  opacity: 0.5;\n  font-size: 0.8rem;\n  a {\n    color: black;\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n      color: black;\n      opacity: 1;\n    }\n  }\n`\nconst StyledDesc = styled.p`\n  margin-top: 10px;\n  opacity: 0.7;\n  font-size: 0.8rem;\n  margin-bottom: 100px;\n`\n\nconst StyledContent = styled.div`\n  padding: 15px 0;\n  color: #666666;\n\n  font-family: 'Montserrat', 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial,\n    sans-serif;\n  a {\n    color: black;\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n      color: #666666;\n    }\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: #222222;\n  }\n  * + h2,\n  * + h3 {\n    margin: 2rem auto 0.8rem;\n  }\n  img {\n    float: right;\n    max-width: 100%;\n    margin: 10px;\n    &.alignleft {\n      float: left;\n    }\n    &.aligncenter {\n      float: none;\n      max-width: 90%;\n      display: block;\n      margin: 10px auto;\n    }\n  }\n  .imgHolder {\n    padding: 5px;\n    margin-left: 5px;\n    float: right;\n    text-align: center;\n    border: 1px solid #e1e1e1;\n    border-radius: 2px;\n    font-style: italic;\n    font-family: Georgia, 'Times New Roman';\n    img {\n      float: none;\n    }\n    > div {\n      display: flex;\n      span {\n        flex-grow: 1;\n        width: 0;\n      }\n    }\n  }\n  pre {\n    background-image: linear-gradient(\n      rgba(0, 0, 0, 0.05) 50%,\n      transparent 50%,\n      transparent\n    );\n    background-size: 100% 4em;\n    border: 1px solid #e1e1e1;\n\n    padding: 2em;\n    line-height: 2em;\n    font-family: Monaco, 'Andale Mono', 'Courier New', Courier, monospace;\n  }\n`\n\nconst Post = ({ post, location }) => {\n  const tagsJSX = (post.frontmatter?.tags || []).map((tag, index) => (\n    <span key={index}>\n      {index > 0 && ', '}\n      <Link to={`/category/${kebabCase(tag)}/`} rel=\"category tag\">\n        {tag}\n      </Link>\n    </span>\n  ))\n  const authorJSX = post.frontmatter.authorLink ? (\n    <span>\n      <a href={post.frontmatter.authorLink} target=\"_blank\" rel=\"noopener\">\n        {post.frontmatter.author}\n      </a>\n    </span>\n  ) : (\n    <span>{post.frontmatter.author}</span>\n  )\n  return (\n    <div>\n      <GatsbyImage\n        image={post.frontmatter.previewImg.childImageSharp.gatsbyImageData}\n        style={{ width: '100%', marginBottom: '1rem' }}\n        imgStyle={{ objectFit: 'contain' }}\n        alt={post.frontmatter.title}\n      />\n\n      <StyledTitle>{post.frontmatter.title}</StyledTitle>\n      <StyledDate>\n        {post.frontmatter.date} / in {tagsJSX} / by {authorJSX}\n      </StyledDate>\n      <StyledContent\n        dangerouslySetInnerHTML={{\n          __html: post.html\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\n\nimport { Section } from '../components/shared'\nimport Post from './post'\nimport { SideBar } from './sidebar'\n\nconst BlogPostTemplate = ({ data, location, pageContext }) => {\n  const { post } = data\n  const { previewImg } = post.frontmatter\n\n  return (\n    <Layout location={location} heroSection={false}>\n      <Seo\n        title={post?.frontmatter?.title}\n        description={post?.frontmatter?.description}\n        previewImg={\n          previewImg?.childImageSharp?.gatsbyImageData?.images?.fallback?.src\n        }\n      />\n      <Section color=\"black\" bgColor=\"white\" bottomArrow={false}>\n        <div className=\"row\">\n          <div className=\"col-md-7\">\n            <Post post={post} location={location} />\n          </div>\n          <div className=\"col-md-5\">\n            <SideBar pageContext={pageContext} location={location} />\n          </div>\n        </div>\n      </Section>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query PostByPath($id: String!) {\n    post: markdownRemark(id: { eq: $id }) {\n      id\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        description\n        date(formatString: \"MMMM DD, YYYY\")\n        author\n        authorLink\n        previewImg {\n          childImageSharp {\n            gatsbyImageData(layout: CONSTRAINED)\n          }\n        }\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}