{"version":3,"sources":["webpack://data-controller-site/./src/templates/blog-list.tsx","webpack://data-controller-site/./src/templates/shared/getDescription.ts","webpack://data-controller-site/./src/templates/postpreview/index.tsx"],"names":["data","location","pageContext","posts","remark","iniPath","page","year","kebabCase","tag","pageInfo","currentPage","numPages","Array","from","length","v","k","paginationJSX","_","i","map","pageIndex","link","Link","to","className","style","borderRadius","padding","margin","heading","desc","title","color","bgColor","bottomArrow","key","post","content","s","document","span","createElement","innerHTML","textContent","innerText","extractContent","substr","StyledLink","styled","props","StyledTitle","StyledDate","StyledDesc","fields","slug","G","image","frontmatter","previewImg","childImageSharp","gatsbyImageData","minHeight","maxHeight","imgStyle","objectFit","alt","date","getDescription","html"],"mappings":"oOAgFA,UA9DyB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACpCC,EAAQH,EAAKI,OAAOD,MAEpBE,EACgB,SAApBH,EAAYI,KAAZ,SAEwB,QAApBJ,EAAYI,KAAZ,IACIJ,EAAYK,KADhB,IAEoB,YAApBL,EAAYI,KAAZ,aACaE,IAAUN,EAAYO,KADnC,IAEA,KAEAC,EAAQ,QAAWR,EAAYS,YAAvB,OAAyCT,EAAYU,SACnEC,MAAMC,KAAK,CAAEC,OAAQ,IAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KACxC,IAAMC,EAAgBL,MAAMC,KAC1B,CAAEC,OAAQb,EAAYU,WACtB,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KACdC,KAAI,SAACC,GACL,IAAMC,EAAqB,IAAdD,EAAkBjB,EAAaA,EAA/B,QAA8CiB,EAC3D,OACE,gBAAC,EAAAE,KAAD,CACEC,GAAIF,EACJG,UAAS,gCACPJ,IAAcpB,EAAYS,YAAc,WAAa,IAEvDgB,MAAO,CACLC,aAAc,MACdC,QAAS,iBACTC,OAAQ,YAGTR,MAIP,OACE,gBAAC,IAAD,CACErB,SAAUA,EACV8B,QAAQ,mCACRC,KAAK,gEAEL,gBAAC,IAAD,CAAKC,MAAM,SACX,gBAAC,KAAD,CAASC,MAAM,QAAQC,QAAQ,QAAQC,aAAa,GAClD,uBAAKV,UAAU,OACb,uBAAKA,UAAU,YACb,uBAAKA,UAAU,OACZvB,EAAMkB,KAAI,SAACrB,EAAMoB,GAAP,OACT,gBAAC,IAAD,CAAMiB,IAAKjB,EAAGkB,KAAMtC,EAAKsC,WAG7B,wBAAMZ,UAAU,eAAeR,GAC/B,wBAAMQ,UAAU,aAAahB,IAE/B,uBAAKgB,UAAU,YACb,gBAAC,IAAD,CAASxB,YAAaA,EAAaD,SAAUA,U,2GC5DzD,EAJuB,SAACsC,GACtB,OATqB,SAACC,GACtB,GAAI,oBAAOC,SAA0B,CACnC,IAAMC,EAAOD,SAASE,cAAc,QAEpC,OADAD,EAAKE,UAAYJ,EACVE,EAAKG,aAAeH,EAAKI,UAElC,OAAON,EAGAO,CAAeR,GAASS,OAAO,EAAG,KAAO,OCArCC,GAAaC,SAAO,SAACC,GAAD,OAAW,gBAAC,EAAA3B,KAAS2B,MAA/B,0EAAGD,CAAH,wEASjBE,EAAcF,mBAAH,gEAAGA,CAAH,0HAOXG,EAAaH,qBAAH,+DAAGA,CAAH,mCAIVI,EAAaJ,kBAAH,+DAAGA,CAAH,uEAwBhB,EAjBa,SAAC,GAAD,IAAGZ,EAAH,EAAGA,KAAH,OACX,uBAAKZ,UAAU,YACb,gBAACuB,EAAD,CAAYxB,GAAIa,EAAKiB,OAAOC,MAC1B,gBAAC,EAAAC,EAAD,CACEC,MAAOpB,EAAKqB,YAAYC,WAAWC,gBAAgBC,gBACnDnC,MAAO,CAAEoC,UAAW,QAASC,UAAW,SACxCC,SAAU,CAAEC,UAAW,WACvBC,IAAK7B,EAAKqB,YAAY1B,QAGxB,gBAACmB,EAAD,KAAcd,EAAKqB,YAAY1B,OAC/B,gBAACoB,EAAD,KAAaf,EAAKqB,YAAYS,MAC9B,gBAACd,EAAD,KAAae,EAAe/B,EAAKgC","file":"component---src-templates-blog-list-tsx-1f4492c9a3bb02f836b0.js","sourcesContent":["import { Link, graphql } from 'gatsby'\nimport React from 'react'\nimport kebabCase from 'lodash/kebabCase'\nimport styled from 'styled-components'\n\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\n\nimport { Section } from '../components/shared'\nimport {\n  SectionHeading,\n  SectionDesc,\n  SolidButton\n} from '../components/shared/styledComponents'\n\nimport Post from './postpreview'\nimport { SideBar } from './sidebar'\n\nconst BlogListTemplate = ({ data, location, pageContext }) => {\n  const posts = data.remark.posts\n\n  const iniPath =\n    pageContext.page == 'index'\n      ? `/blog/`\n      : pageContext.page == 'year'\n      ? `/${pageContext.year}/`\n      : pageContext.page == 'category'\n      ? `/category/${kebabCase(pageContext.tag)}/`\n      : null\n\n  const pageInfo = `Page ${pageContext.currentPage} of ${pageContext.numPages}`\n  Array.from({ length: 5 }, (v, k) => k + 1)\n  const paginationJSX = Array.from(\n    { length: pageContext.numPages },\n    (_, i) => i + 1\n  ).map((pageIndex) => {\n    const link = pageIndex === 1 ? iniPath : `${iniPath}page/${pageIndex}`\n    return (\n      <Link\n        to={link}\n        className={`btn btn-outline-dark btn-sm ${\n          pageIndex === pageContext.currentPage ? 'disabled' : ''\n        }`}\n        style={{\n          borderRadius: '50%',\n          padding: '.375rem .75rem',\n          margin: '0.25rem'\n        }}\n      >\n        {pageIndex}\n      </Link>\n    )\n  })\n  return (\n    <Layout\n      location={location}\n      heading=\"Data Controllerâ€™s Knowledge Base\"\n      desc=\"A section dedicated to news, updates and educational pieces.\"\n    >\n      <Seo title=\"Blog\" />\n      <Section color=\"black\" bgColor=\"white\" bottomArrow={false}>\n        <div className=\"row\">\n          <div className=\"col-md-7\">\n            <div className=\"row\">\n              {posts.map((data, i) => (\n                <Post key={i} post={data.post} />\n              ))}\n            </div>\n            <span className=\"float-start\">{paginationJSX}</span>\n            <span className=\"float-end\">{pageInfo}</span>\n          </div>\n          <div className=\"col-md-5\">\n            <SideBar pageContext={pageContext} location={location} />\n          </div>\n        </div>\n      </Section>\n    </Layout>\n  )\n}\n\nexport default BlogListTemplate\n\nexport const pageQuery = graphql`\n  query BlogListQuery(\n    $filter: MarkdownRemarkFilterInput!\n    $skip: Int!\n    $limit: Int!\n  ) {\n    remark: allMarkdownRemark(\n      filter: $filter\n      limit: $limit\n      skip: $skip\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      posts: edges {\n        post: node {\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            author\n            authorLink\n            previewImg {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n// tags\n","const extractContent = (s: string): string => {\n  if (typeof document !== `undefined`) {\n    const span = document.createElement('span')\n    span.innerHTML = s\n    return span.textContent || span.innerText\n  }\n  return s\n}\nconst getDescription = (content: string): string => {\n  return extractContent(content).substr(0, 100) + '...'\n}\n\nexport default getDescription\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport styled from 'styled-components'\n\nimport getDescription from '../shared/getDescription'\n\nexport const StyledLink = styled((props) => <Link {...props} />)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    opacity: 0.8;\n    color: black;\n  }\n`\n\nconst StyledTitle = styled.h5`\n  font-family: 'Montserrat', 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial,\n    sans-serif;\n  font-size: 1rem;\n  margin-bottom: 0;\n`\n\nconst StyledDate = styled.span`\n  opacity: 0.5;\n  font-size: 0.8rem;\n`\nconst StyledDesc = styled.p`\n  margin-top: 10px;\n  opacity: 0.7;\n  font-size: 0.8rem;\n  margin-bottom: 100px;\n`\n\nconst Post = ({ post }) => (\n  <div className=\"col-md-6\">\n    <StyledLink to={post.fields.slug}>\n      <GatsbyImage\n        image={post.frontmatter.previewImg.childImageSharp.gatsbyImageData}\n        style={{ minHeight: '150px', maxHeight: '200px' }}\n        imgStyle={{ objectFit: 'contain' }}\n        alt={post.frontmatter.title}\n      />\n\n      <StyledTitle>{post.frontmatter.title}</StyledTitle>\n      <StyledDate>{post.frontmatter.date}</StyledDate>\n      <StyledDesc>{getDescription(post.html)}</StyledDesc>\n    </StyledLink>\n  </div>\n)\n\nexport default Post\n"],"sourceRoot":""}